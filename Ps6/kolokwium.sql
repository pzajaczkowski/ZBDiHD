-- ZADANIE 1

SELECT DECODE(PRODUCT_SALE, NULL, '--NO DATA--', PRODUCT_SALE) AS PRODUCT_SALE,
       TO_CHAR(PROFIT, '$999.9')                               AS PROFIT,
       RANK_PROFIT,
       DECODE(PRODUCT_ADS, NULL, '--NO DATA--', PRODUCT_ADS)   AS PRODUCT_ADS,
       TO_CHAR(BUDGET, '$99,999')                              AS BUDGET,
       RANK_BUDGET
FROM (SELECT P.NAME                                      AS PRODUCT_SALE,
             SUM(S.PROFIT)                               AS PROFIT,
             RANK() OVER ( ORDER BY SUM(S.PROFIT) DESC ) AS RANK_PROFIT
      FROM SALE S
               JOIN PRODUCT P ON P.ID_PRODUCT = S.ID_PRODUCT
      GROUP BY P.NAME) SL
         FULL JOIN
     (SELECT P.NAME                                    AS PRODUCT_ADS,
             SUM(A.BUDGET)                             AS BUDGET,
             RANK() OVER (ORDER BY SUM(A.BUDGET) DESC) AS RANK_BUDGET
      FROM PRODUCT P
               JOIN ADVERTIZEMENT A ON P.ID_PRODUCT = A.ID_PRODUCT
      GROUP BY P.NAME) ADS
     ON ADS.PRODUCT_ADS = SL.PRODUCT_SALE
WHERE RANK_BUDGET IN (1, 2, 3, NULL)
   OR RANK_PROFIT IN (1, 2, 3, NULL)
   OR RANK_BUDGET IS NULL
   OR RANK_PROFIT IS NULL
ORDER BY RANK_BUDGET


-- ZADANIE 2 nie zdążyłem :(
SELECT SOCIAL.YEAR, 
FROM (SELECT YEAR,
             DESCRIPTION,
             AVG(COUNT(A.ID_ADVERTIZEMENT))
                 OVER (PARTITION BY DESCRIPTION ORDER BY YEAR DESC ROWS BETWEEN 1 PRECEDING AND 0 FOLLOWING) AS TREND
      FROM ADVERTIZEMENT A
               JOIN TIMEMONTH TM ON TM.ID_TIME = A.ID_TIME
               JOIN ADTYPE AT ON AT.ID_TYPE = A.ID_TYPE
      WHERE UPPER(DESCRIPTION) IN ('LOCAL LISTINGS')
      GROUP BY YEAR, DESCRIPTION) LOCAL
         JOIN (SELECT YEAR,
                      DESCRIPTION,
                      AVG(COUNT(A.ID_ADVERTIZEMENT))
                          OVER (PARTITION BY DESCRIPTION ORDER BY YEAR DESC ROWS BETWEEN 1 PRECEDING AND 0 FOLLOWING) AS TREND
               FROM ADVERTIZEMENT A
                        JOIN TIMEMONTH TM ON TM.ID_TIME = A.ID_TIME
                        JOIN ADTYPE AT ON AT.ID_TYPE = A.ID_TYPE
               WHERE UPPER(DESCRIPTION) IN ('SOCIAL MEDIA')
               GROUP BY YEAR, DESCRIPTION) SOCIAL
              ON LOCAL.YEAR = SOCIAL.YEAR

-- ZADANIE 3
SELECT DISTINCT LAST_VALUE(AGE_GROUP)
                           OVER (PARTITION BY QUARTER ORDER BY QUARTER) AS AGE_GROUP,
                QUARTER
FROM (SELECT A.NAME                                      AS AGE_GROUP,
             ROUND(AVG(S.AMOUNT), 2)                     AS AVG_AMOUNT,
             NTILE(4) OVER (ORDER BY AVG(S.AMOUNT) DESC) AS QUARTER
      FROM SALE S
               JOIN AGE A ON A.ID_AGE = S.ID_AGE
      GROUP BY A.NAME)
ORDER BY QUARTER

-- ZADANIE 4

SELECT CONTINENT, CATEGORY, SALE, PERCENT, TO_CHAR(AVG, '$9,999.99') AS AVG
FROM (SELECT DECODE(L.CONTINENT, NULL, '--NO DATA--', L.CONTINENT)                          AS CONTINENT,
             DECODE(C.NAME, NULL, '--NO DATA--', C.NAME)                                    AS CATEGORY,
             TO_CHAR(SUM(S.AMOUNT), '$9,999.9')                                             AS SALE,
             ROUND(RATIO_TO_REPORT(SUM(S.AMOUNT)) OVER (PARTITION BY L.CONTINENT), 3) * 100 AS PERCENT,
             ROUND(AVG(SUM(S.AMOUNT)) OVER (PARTITION BY L.CONTINENT), 2)                   AS AVG
      FROM SALE S
               FULL JOIN LOCATION L ON L.ID_LOCATION = S.ID_LOCATION
               FULL JOIN CATEGORY C ON C.ID_CATEGORY = S.ID_CATEGORY
      GROUP BY L.CONTINENT, C.NAME)
WHERE AVG > 1000
   OR AVG IS NULL

-- ZADANIE 5

SELECT *
FROM (SELECT DECODE(P.NAME, NULL, '-MAX-AVG-', P.NAME) AS PRODUCT,
             TM.MONTH,
             ROUND(AVG(A.BUDGET), 2)                   AS AVG_BUDGET,
             MAX(S.PROFIT)                             AS MAX_PROFIT
      FROM SALE S
               JOIN PRODUCT P ON P.ID_PRODUCT = S.ID_PRODUCT
               JOIN ADVERTIZEMENT A ON A.ID_PRODUCT = S.ID_PRODUCT
               FULL JOIN TIMEMONTH TM ON TM.ID_TIME = A.ID_TIME
      WHERE TM.MONTH IN (7, 8, 9)
        AND TM.YEAR = 2016
      GROUP BY CUBE (P.NAME, TM.MONTH))
    PIVOT (MAX(MAX_PROFIT) AS MAX, AVG(AVG_BUDGET) AS AVG FOR MONTH IN (7, 8, 9))
ORDER BY PRODUCT DESC