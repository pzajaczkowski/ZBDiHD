-- TWORZENIE PERSPEKTYW

CREATE OR REPLACE VIEW V_PUBLISHER AS
SELECT *
FROM PUBLISHER;

CREATE OR REPLACE VIEW V_BOOKS AS
SELECT *
FROM BOOKS;

CREATE OR REPLACE VIEW V_AUTHOR AS
SELECT *
FROM AUTHOR;

CREATE OR REPLACE VIEW V_CUSTOMERS AS
SELECT *
FROM CUSTOMERS;

CREATE OR REPLACE VIEW V_TIME AS
SELECT *
FROM D_TIME;

CREATE OR REPLACE VIEW V_SALE AS
SELECT P.PUBID,
       B.ISBN,
       C.CUSTOMER#,
       T.ID_TIME,
       A.AUTHORID,
       SUM(OI.QUANTITY)                       AS QUANTITY,
       SUM(OI.QUANTITY * (B.RETAIL - B.COST)) AS PROFIT,
       SUM(OI.QUANTITY * B.RETAIL)            AS SALE_AMOUNT
FROM PUBLISHER P
         JOIN BOOKS B ON P.PUBID = B.PUBID
         JOIN ORDERITEMS OI ON OI.ISBN = B.ISBN
         JOIN ORDERS O ON O.ORDER# = OI.ORDER#
         JOIN CUSTOMERS C ON C.CUSTOMER# = O.CUSTOMER#
         JOIN BOOKAUTHOR BA ON BA.ISBN = B.ISBN
         JOIN AUTHOR A ON A.AUTHORID = BA.AUTHORID
         JOIN D_TIME T ON T.ORDERDATE = O.ORDERDATE
GROUP BY P.PUBID,
         B.ISBN,
         C.CUSTOMER#,
         T.ID_TIME,
         A.AUTHORID;

-- TWORZENIE ZAPYTAÅƒ

-- ZADANIE 2

SELECT C.FIRSTNAME || ' ' || C.LASTNAME AS CUSTOMER,
       T.YEAR,
       T.MONTH_NUMBER,
       SUM(S.QUANTITY)                  AS QUANTITY,
       SUM(S.SALE_AMOUNT)               AS SALE_AMOUNT
FROM V_CUSTOMERS C
         JOIN V_SALE S ON C.CUSTOMER# = S.CUSTOMER#
         JOIN V_TIME T ON S.ID_TIME = T.ID_TIME
GROUP BY GROUPING SETS (
    (C.CUSTOMER#, C.FIRSTNAME, C.LASTNAME, T.YEAR, T.MONTH_NUMBER),
    (),
    ( C.CUSTOMER#, C.FIRSTNAME, C.LASTNAME));

-- ZADANIE 3

SELECT B.CATEGORY, T.MONTH_DAY_NUMBER, SUM(S.PROFIT) AS PROFIT
FROM V_TIME T
         JOIN V_SALE S ON S.ID_TIME = T.ID_TIME
         JOIN V_BOOKS B ON B.ISBN = S.ISBN
WHERE T.YEAR = 2005
  AND T.MONTH_NUMBER = 4
GROUP BY GROUPING SETS ( (B.CATEGORY, T.MONTH_DAY_NUMBER), ( B.CATEGORY) );

-- ZADANIE 4

SELECT T.YEAR,
       A.FNAME || ' ' || A.LNAME AS NAME,
       SUM(S.QUANTITY)           AS QUANTITY,
       SUM(S.SALE_AMOUNT)        AS AMOUNT
FROM V_AUTHOR A
         JOIN V_SALE S ON S.AUTHORID = A.AUTHORID
         JOIN V_TIME T ON T.ID_TIME = S.ID_TIME
GROUP BY ROLLUP (T.YEAR, (A.AUTHORID, A.FNAME, A.LNAME));

-- ZADANIE 5

SELECT T.DAY_NAME,
       C.CITY,
       C.STATE,
       SUM(S.QUANTITY)                          AS QUANTITY,
       GROUPING(T.DAY_NAME)                     AS G_D,
       GROUPING(C.CITY)                         AS G_C,
       GROUPING(C.STATE)                        AS G_S,
       GROUPING_ID(T.DAY_NAME, C.CITY, C.STATE) AS G_ID
FROM V_CUSTOMERS C
         JOIN V_SALE S ON C.CUSTOMER# = S.CUSTOMER#
         JOIN V_TIME T ON S.ID_TIME = T.ID_TIME
GROUP BY CUBE (T.DAY_NAME, C.CITY, C.STATE)
ORDER BY G_ID;

-- ZADANIE 7

CREATE TABLE KOSTKA AS
SELECT T.YEAR,
       T.MONTH_NUMBER,
       C.CITY,
       B.CATEGORY,
       SUM(S.PROFIT) AS PROFIT
FROM V_CUSTOMERS C
         JOIN V_SALE S ON C.CUSTOMER# = S.CUSTOMER#
         JOIN V_TIME T ON S.ID_TIME = T.ID_TIME
         JOIN V_BOOKS B ON B.ISBN = S.ISBN
GROUP BY ROLLUP ((T.YEAR, T.MONTH_NUMBER), C.CITY, B.CATEGORY);

-- ZADANIE DODATKOWE
SELECT *
FROM (SELECT T.YEAR,
             B.CATEGORY,
             SUM(S.PROFIT) AS PROFIT
      FROM V_SALE S
               JOIN V_TIME T ON S.ID_TIME = T.ID_TIME
               JOIN V_BOOKS B ON B.ISBN = S.ISBN
      GROUP BY T.YEAR, B.CATEGORY)
    PIVOT (SUM(PROFIT) FOR YEAR IN (2005, 2006, 2007, 2008, 2009, 2010));