CREATE OR REPLACE FUNCTION F_IS_WEEKEND(P_DATE DATE) RETURN NUMBER IS
    IS_WEEKEND NUMBER;
BEGIN
    SELECT CASE WHEN MOD(TO_CHAR(P_DATE, 'J'), 7) + 1 IN (6, 7) THEN 1 ELSE 0 END
    INTO IS_WEEKEND
    FROM DUAL;
    RETURN IS_WEEKEND;
END;
/

CREATE OR REPLACE PROCEDURE P_INIT_TIME_DIM IS
BEGIN
    MERGE INTO TIME_DIM T
    USING (SELECT DISTINCT O.ORDER_DATE,
                           TO_NUMBER(TO_CHAR(O.ORDER_DATE, 'D')) AS WEEK_DAY,
                           F_IS_WEEKEND(O.ORDER_DATE)            AS IS_WEEKEND,
                           TO_CHAR(O.ORDER_DATE, 'DAY')          AS WEEK_DAY_NAME,
                           TO_CHAR(O.ORDER_DATE, 'MONTH')        AS MONTH_NAME,
                           EXTRACT(MONTH FROM O.ORDER_DATE)      AS MONTH,
                           EXTRACT(YEAR FROM O.ORDER_DATE)       AS YEAR
           FROM ORDERS O) SUB
    ON (T.SELL_DATE = SUB.ORDER_DATE)
    WHEN NOT MATCHED THEN
        INSERT (T.SELL_DATE, T.WEEK_DAY, T.IS_WEEKEND, T.WEEK_DAY_NAME, T.MONTH_NAME, T.MONTH, T.YEAR)
        VALUES (SUB.ORDER_DATE, SUB.WEEK_DAY, SUB.IS_WEEKEND, SUB.WEEK_DAY_NAME, SUB.MONTH_NAME, SUB.MONTH, SUB.YEAR);
END;
/

CREATE OR REPLACE PROCEDURE P_INIT_LOCALIZATIONS_DIM IS
BEGIN
    MERGE INTO LOCALIZATIONS_DIM LD
    USING (SELECT DISTINCT *
           FROM LOCALIZATIONS) SUB
    ON (LD.COUNTRY = SUB.COUNTRY AND LD.STATE = SUB.STATE AND LD.CITY = SUB.CITY)
    WHEN NOT MATCHED THEN
        INSERT (LD.COUNTRY, LD.STATE, LD.CITY) VALUES (SUB.COUNTRY, SUB.STATE, SUB.CITY);
END;
/

CREATE OR REPLACE PROCEDURE P_INIT_PRODUCTS_DIM IS
BEGIN
    MERGE INTO PRODUCTS_DIM PD
    USING (SELECT DISTINCT *
           FROM PRODUCTS P
                    JOIN CATEGORIES C ON (P.CATEGORY_ID = C.CATEGORY_ID)) SUB
    ON (PD.NAME = SUB.PRODUCT_NAME
        AND PD.CATEGORY_NAME = SUB.CATEGORY_NAME)
    WHEN NOT MATCHED THEN
        INSERT (PD.NAME, PD.CATEGORY_NAME) VALUES (SUB.PRODUCT_NAME, SUB.CATEGORY_NAME);
END;
/