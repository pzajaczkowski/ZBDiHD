-- ZADANIE 1
-- WYZNACZ RANKING WYDAWCÓW (PODAJ NAZWĘ) W ZALEŻNOŚCI OD LICZBY KSIĄŻEK, JAKĄ OPUBLIKOWALI (TZN.
-- PIERWSZY NA LIŚCIE RANKINGOWEJ POWINIEN ZNALEŹĆ SIĘ TEN WYDAWCA, KTÓRY OPUBLIKOWAŁ NAJWIĘCEJ KSIĄŻEK).
-- SKORZYSTAJ Z FUNKCJI RANK().
-- ZADANIE 2
-- ROZWIĄŻ ZADANIE 1 ZASTĘPUJĄC FUNKCJĘ RANK() FUNKCJĄ DENSE_RANK(). NASTĘPNIE WYBIERZ TE
-- WIERSZE, KTÓRE ZNALAZŁY SIĘ NA PIERWSZYM MIEJSCUU RANKINGU.

-- ZMODYFIKOWANE: ZWROC TYLKO TE WYDAWNICTWA KTORE ZAJMUJA 2 LUB 3 W DENSE
-- RANK I DENSE_RANK ZWRACAJA MIEJSCE DANEGO REKORDU POSROD ZBIORU

SELECT *
FROM (SELECT P.NAME,
             COUNT(B.ISBN),
             RANK() OVER (ORDER BY COUNT(B.ISBN) DESC)        AS RANK,
             DENSE_RANK() OVER (ORDER BY COUNT(B.ISBN) DESC ) AS DENSE_RANK
      FROM BOOKS B
               JOIN PUBLISHER P ON B.PUBID = P.PUBID
      GROUP BY P.PUBID, P.NAME)
WHERE DENSE_RANK IN (2, 3)
   OR RANK IN (2, 3);

-- ZADANIE 3
-- DLA KAŻDEGO MIASTA KLIENTA WYZNACZ LICZBĘ SPRZEDANYCH KSIĄŻEK. PODZIEL WYNIK ZAPYTANIA WG LICZBY
-- SPRZEDANYCH KSIĄŻEK ROSNĄCO W OPARCIU O FUNKCJĘ NTILE(N), GDZIE N=2, 3, 4.
-- NTILE DZIELI ZBIÓR NA PODANA ILOŚĆ PODZBIORÓW

SELECT C.CITY,
       SUM(S.QUANTITY)                               AS QUANTITY,
       NTILE(2) OVER (ORDER BY SUM(S.QUANTITY) DESC) AS NTILE
FROM V_CUSTOMERS C
         JOIN V_SALE S ON C.CUSTOMER# = S.CUSTOMER#
GROUP BY C.CITY;

-- ZADANIE 4
-- DLA KAŻDEGO WYDAWCY I KOLEJNYCH MIESIĘCY I LAT (WYŚWIETL MIESIĄC I ROK) WYZNACZ ZYSKI ZE SPRZEDAŻY.
-- WYNIK UPORZĄDKUJ ROSNĄCO WG DATY. DODATKOWO WYZNACZ SUMĘ NARASTAJĄCĄ DLA ZYSKÓW (WARTOŚĆ TA
-- POWINNA BYĆ WYZNACZANA W RAMACH DANEGO WYDAWCY).

SELECT P.NAME,
       T.YEAR,
       T.MONTH_NUMBER,
       SUM(S.PROFIT)                                          AS PROFIT,
       SUM(SUM(S.PROFIT)) OVER (PARTITION BY P.NAME ORDER BY T.YEAR, T.MONTH_NUMBER
           ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW ) AS CUM_SUM
FROM V_PUBLISHER P
         JOIN V_SALE S ON P.PUBID = S.PUBID
         JOIN V_TIME T ON S.ID_TIME = T.ID_TIME
GROUP BY P.NAME, T.YEAR, T.MONTH_NUMBER
ORDER BY 1, 2, 3;


-- ZADANIE 5
-- ZMODYFIKUJ ZADANIE 4 ZMIENIAJĄC SUMĘ NARASTAJĄCĄ NA ŚREDNIĄ KROCZĄCĄ. ŚREDNIA KROCZĄCA POWINNA BYĆ
-- WYZNACZONA W OPARCIU O DWA WIERSZE POPRZEDZAJĄCE DANY WIERSZ I JEDEN WIERSZ NASTĘPUJĄCY PO DANYM
-- WIERSZU.
-- ZADANIE 6
-- ZMODYFIKUJ ZADANIE 4 ZMIENIAJĄC SUMĘ NARASTAJĄCĄ NA ŚREDNIĄ CENTRALNĄ. ŚREDNIA CENTRALNA DLA DANEJ
-- GRUPY POWINNA BYĆ WYZNACZONA W OPARCIU O DWA WIERSZE POPRZEDZAJĄCE DANY WIERSZ I DWA WIERSZE
-- NASTĘPUJĄCE PO DANYM WIERSZU.

SELECT P.NAME,
       T.YEAR,
       T.MONTH_NUMBER,
       SUM(S.PROFIT)                                      AS PROFIT,
       ROUND(AVG(SUM(S.PROFIT)) OVER (PARTITION BY P.NAME ORDER BY T.YEAR, T.MONTH_NUMBER
           ROWS BETWEEN 2 PRECEDING AND 1 FOLLOWING ), 2) AS MOV_AVG
FROM V_PUBLISHER P
         JOIN V_SALE S ON P.PUBID = S.PUBID
         JOIN V_TIME T ON S.ID_TIME = T.ID_TIME
GROUP BY P.NAME, T.YEAR, T.MONTH_NUMBER
ORDER BY 1, 2, 3;

-- ZADANIE 7
-- DLA KAŻDEJ KATEGORII I KAŻDEGO MIESIĄCA ROKU 2005 WYZNACZ SUMĘ SPRZEDANYCH KSIĄŻEK (POLE QUANTITY).
-- DODATKOWO DODAJ KOLUMNĘ, KTÓRA ZWRÓCI ŚREDNIĄ LICZBĘ SPRZEDANYCH KSIĄŻEK W DANYM MIESIĄCU Z
-- POMINIĘCIEM KATEGORII. SKORZYSTAJ Z KLAUZULI PARTITION BY.

SELECT B.CATEGORY,
       T.MONTH_NAME,
       SUM(S.QUANTITY)                                                 AS QUANTITY,
       ROUND(AVG(SUM(S.QUANTITY)) OVER (PARTITION BY T.MONTH_NAME), 2) AS AVG
FROM V_BOOKS B
         JOIN V_SALE S ON B.ISBN = S.ISBN
         JOIN V_TIME T ON S.ID_TIME = T.ID_TIME
WHERE T.YEAR = 2005
GROUP BY B.CATEGORY, T.MONTH_NAME;

-- ZADANIE 8
-- DLA KAŻDEGO WYDAWCY WYZNACZ ZYSKI ZE SPRZEDAŻY. UPORZĄDKUJ MALEJĄCO WYNIK ZAPYTANIA WG WARTOŚCI
-- ZYSKÓW. DODATKOWO WYZNACZ DWIE KOLUMNY: (1) ZWRÓCI RÓŻNICĘ POMIĘDZY ZYSKAMI DANEGO WYDAWCY I
-- WYDAWCY, KTÓRY JEST PIERWSZY NA LIŚCIE ORAZ (2) ZWRÓCI RÓŻNICĘ POMIĘDZY ZYSKAMI DANEGO WYDAWCY I
-- WYDAWCY, KTÓRY JEST OSTATNI NA LIŚCIE. SKORZYSTAJ Z FUNKCJI FIRST_VALUE(), LAST_VALUE().

SELECT P.NAME,
       SUM(S.PROFIT)                                                                                                           AS PROFIT,
       SUM(S.PROFIT) - FIRST_VALUE(SUM(S.PROFIT))
                                   OVER (ORDER BY SUM(S.PROFIT) DESC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS DIFF_FIRST,
       SUM(S.PROFIT) - LAST_VALUE(SUM(S.PROFIT))
                                  OVER (ORDER BY SUM(S.PROFIT) DESC ROWS BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) AS DIFF_LAST
FROM V_PUBLISHER P
         JOIN V_SALE S
              ON P.PUBID = S.PUBID
GROUP BY P.NAME;

-- ZADANIE 9
-- DLA KAŻDEJ KATEGORII WYZNACZ JEJ UDZIAŁ W CAŁKOWITYCH ZYSKACH ZE SPRZEDAŻY W ROKU 2005. SKORZYSTAJ Z
-- FUNKCJI RATIO_TO_REPORT().

SELECT B.CATEGORY,
       T.MONTH_NAME,
       SUM(S.PROFIT)                                                                   AS PROFIT,
       ROUND(RATIO_TO_REPORT(SUM(S.PROFIT)) OVER (PARTITION BY T.MONTH_NAME), 3) * 100 AS RATIO
FROM V_BOOKS B
         JOIN V_SALE S ON B.PUBID = S.PUBID
         JOIN V_TIME T ON S.ID_TIME = T.ID_TIME
WHERE T.YEAR = 2005
GROUP BY B.CATEGORY, T.MONTH_NAME;

-- ZADANIE 10
-- DLA KAŻDEJ KATEGORII I KAŻDEGO MIESIĄCA ROKU 2005 WYZNACZ ZYSK ZE SPRZEDAŻY. WYNIK PRZEDSTAW W
-- POSTACI TABELI PRZESTAWNEJ.

SELECT *
FROM (SELECT DECODE(B.CATEGORY, NULL, 'SUMMARY', TRIM(B.CATEGORY))           AS CATEGORY,
             DECODE(TRIM(T.MONTH_NAME), NULL, 'SUMMARY', TRIM(T.MONTH_NAME)) AS MONTH_NAME,
             SUM(S.PROFIT)                                                   AS PROFIT
      FROM V_BOOKS B
               JOIN V_SALE S ON B.PUBID = S.PUBID
               JOIN V_TIME T ON S.ID_TIME = T.ID_TIME
      WHERE T.YEAR = 2005
      GROUP BY CUBE (B.CATEGORY, TRIM(T.MONTH_NAME)))
    PIVOT (SUM(PROFIT) FOR MONTH_NAME IN ('MARZEC', 'KWIECIEŃ', 'SUMMARY'));

SELECT *
FROM
    (SELECT B.CATEGORY,
            DECODE(TRIM(T.MONTH_NAME), NULL, 'SUMMARY', TRIM(T.MONTH_NAME)) MONTH_NAME,
            SUM(S.PROFIT)                                                   PROFIT
     FROM V_BOOKS B
              JOIN V_SALE S ON B.ISBN = S.ISBN
              JOIN V_TIME T ON T.ID_TIME = S.ID_TIME
     GROUP BY CUBE (B.CATEGORY, T.MONTH_NAME)) PIVOT (SUM(PROFIT) FOR
        MONTH_NAME IN ('MARCH','APRIL','MAY','JUNE', 'SUMMARY'));