CREATE OR REPLACE PROCEDURE P_LOAD_DATA IS
BEGIN
    ---ZIP---
    MERGE
    INTO ZIP Z
    USING (SELECT DISTINCT ZIP, STATE
           FROM CUSTOMERS) SUB
    ON (Z.ZIP_CODE = SUB.ZIP)
    WHEN NOT MATCHED THEN
        INSERT (ZIP_CODE, STATE) VALUES (SUB.ZIP, SUB.STATE);
    ---TIME---
    MERGE
    INTO TIME T
    USING (SELECT DISTINCT EXTRACT(MONTH FROM ORDERDATE) AS MONTH, EXTRACT(YEAR FROM ORDERDATE) AS YEAR
           FROM ORDERS) SUB
    ON (T.MONTH = SUB.MONTH AND T.YEAR = SUB.YEAR)
    WHEN NOT MATCHED THEN
        INSERT (MONTH, YEAR) VALUES (SUB.MONTH, SUB.YEAR);
    ---SALE---
    MERGE
    INTO SALE S
    USING (SELECT SUM(B.RETAIL * OI.QUANTITY) AS SALE_AMOUNT, Z.ID_ZIP, T.ID_TIME
           FROM BOOKS B
                    JOIN ORDERITEMS OI ON B.ISBN = OI.ISBN
                    JOIN ORDERS O ON O.ORDER# = OI.ORDER#
                    JOIN CUSTOMERS C ON O.CUSTOMER# = C.CUSTOMER#
                    JOIN ZIP Z ON C.ZIP = Z.ZIP_CODE
                    JOIN TIME T ON T.MONTH = EXTRACT(MONTH FROM O.ORDERDATE) AND T.YEAR = EXTRACT(YEAR FROM O.ORDERDATE)
           GROUP BY Z.ID_ZIP, T.ID_TIME) SUB
    ON (S.ID_ZIP = SUB.ID_ZIP AND S.ID_TIME = SUB.ID_TIME)
    WHEN MATCHED THEN
        UPDATE SET SALE_AMOUNT = SUB.SALE_AMOUNT
    WHEN NOT MATCHED THEN
        INSERT (ID_ZIP, ID_TIME, SALE_AMOUNT) VALUES (SUB.ID_ZIP, SUB.ID_TIME, SUB.SALE_AMOUNT);

END;
/

BEGIN
    P_LOAD_DATA();
END;

CREATE OR REPLACE PACKAGE INIT AS
    PROCEDURE P_LOAD_DATA;
    PROCEDURE LOAD_PROFIT;
    FUNCTION GET_PROFIT(P_STATE ORDERS.SHIPSTATE%TYPE) RETURN NUMBER;
END;

CREATE OR REPLACE PACKAGE BODY INIT AS
    PROCEDURE P_LOAD_DATA IS
    BEGIN
        ---ZIP---
        MERGE
        INTO ZIP Z
        USING (SELECT DISTINCT ZIP, STATE
               FROM CUSTOMERS) SUB
        ON (Z.ZIP_CODE = SUB.ZIP)
        WHEN NOT MATCHED THEN
            INSERT (ZIP_CODE, STATE) VALUES (SUB.ZIP, SUB.STATE);
        ---TIME---
        MERGE
        INTO TIME T
        USING (SELECT DISTINCT EXTRACT(MONTH FROM ORDERDATE) AS MONTH, EXTRACT(YEAR FROM ORDERDATE) AS YEAR
               FROM ORDERS) SUB
        ON (T.MONTH = SUB.MONTH AND T.YEAR = SUB.YEAR)
        WHEN NOT MATCHED THEN
            INSERT (MONTH, YEAR) VALUES (SUB.MONTH, SUB.YEAR);
        ---SALE---
        MERGE
        INTO SALE S
        USING (SELECT SUM(B.RETAIL * OI.QUANTITY) AS SALE_AMOUNT, Z.ID_ZIP, T.ID_TIME
               FROM BOOKS B
                        JOIN ORDERITEMS OI ON B.ISBN = OI.ISBN
                        JOIN ORDERS O ON O.ORDER# = OI.ORDER#
                        JOIN CUSTOMERS C ON O.CUSTOMER# = C.CUSTOMER#
                        JOIN ZIP Z ON C.ZIP = Z.ZIP_CODE
                        JOIN TIME T
                             ON T.MONTH = EXTRACT(MONTH FROM O.ORDERDATE) AND T.YEAR = EXTRACT(YEAR FROM O.ORDERDATE)
               GROUP BY Z.ID_ZIP, T.ID_TIME) SUB
        ON (S.ID_ZIP = SUB.ID_ZIP AND S.ID_TIME = SUB.ID_TIME)
        WHEN MATCHED THEN
            UPDATE SET SALE_AMOUNT = SUB.SALE_AMOUNT
        WHEN NOT MATCHED THEN
            INSERT (ID_ZIP, ID_TIME, SALE_AMOUNT) VALUES (SUB.ID_ZIP, SUB.ID_TIME, SUB.SALE_AMOUNT);

    END P_LOAD_DATA;
    PROCEDURE LOAD_PROFIT IS
        CURSOR C_PROFIT IS
            SELECT DISTINCT SHIPSTATE, GET_PROFIT(SHIPSTATE) PROFIT
            FROM ORDERS;
    BEGIN
        FOR I IN C_PROFIT
            LOOP
                INSERT INTO PROFIT_BY_STATE VALUES (I.SHIPSTATE, I.PROFIT);
            END LOOP;
    END LOAD_PROFIT;
    FUNCTION GET_PROFIT(P_STATE ORDERS.SHIPSTATE%TYPE) RETURN NUMBER IS
        PROFIT NUMBER;
    BEGIN
        SELECT SUM(OI.QUANTITY * (B.RETAIL - B.COST))
        INTO PROFIT
        FROM BOOKS B
                 JOIN ORDERITEMS OI ON B.ISBN = OI.ISBN
                 JOIN
             ORDERS O ON OI.ORDER# = O.ORDER#
        WHERE UPPER(O.SHIPSTATE) = UPPER(P_STATE);
        RETURN PROFIT;
    END GET_PROFIT;
END;
/